{"ast":null,"code":"var _jsxFileName = \"/home/frizian1234/IAS/mealwell-redesign/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Content from './components/Content';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedSection, setSelectedSection] = useState('Milestone 1');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  // Toggle the sidebar visibility on mobile screens\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen);\n\n  // Automatically show the sidebar on larger screens and hide it on smaller screens\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth > 768) {\n        setSidebarOpen(true); // Show sidebar on larger screens\n      } else {\n        setSidebarOpen(false); // Hide sidebar on smaller screens\n      }\n    };\n\n    // Initialize sidebar visibility based on screen size\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-button\",\n      onClick: toggleSidebar,\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), sidebarOpen && /*#__PURE__*/_jsxDEV(Sidebar, {\n      setSelectedSection: setSelectedSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3DW+gXAVOEKZTZJz+L6HOPxxxRc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Content","jsxDEV","_jsxDEV","App","_s","selectedSection","setSelectedSection","sidebarOpen","setSidebarOpen","toggleSidebar","handleResize","window","innerWidth","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/frizian1234/IAS/mealwell-redesign/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Content from './components/Content';\nimport './App.css';\n\nfunction App() {\n  const [selectedSection, setSelectedSection] = useState('Milestone 1');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  // Toggle the sidebar visibility on mobile screens\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen);\n\n  // Automatically show the sidebar on larger screens and hide it on smaller screens\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth > 768) {\n        setSidebarOpen(true);  // Show sidebar on larger screens\n      } else {\n        setSidebarOpen(false); // Hide sidebar on smaller screens\n      }\n    };\n\n    // Initialize sidebar visibility based on screen size\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\n        â˜°\n      </button>\n      {sidebarOpen && <Sidebar setSelectedSection={setSelectedSection} />}\n      <div className=\"content\">\n        <Content />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,aAAa,CAAC;EACrE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMY,aAAa,GAAGA,CAAA,KAAMD,cAAc,CAAC,CAACD,WAAW,CAAC;;EAExD;EACAT,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIC,MAAM,CAACC,UAAU,GAAG,GAAG,EAAE;QAC3BJ,cAAc,CAAC,IAAI,CAAC,CAAC,CAAE;MACzB,CAAC,MAAM;QACLA,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB;IACF,CAAC;;IAED;IACAE,YAAY,CAAC,CAAC;IAEdC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bd,OAAA;MAAQa,SAAS,EAAC,eAAe;MAACE,OAAO,EAAER,aAAc;MAAAO,QAAA,EAAC;IAE1D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRd,WAAW,iBAAIL,OAAA,CAACH,OAAO;MAACO,kBAAkB,EAAEA;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEnB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBd,OAAA,CAACF,OAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAnCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}